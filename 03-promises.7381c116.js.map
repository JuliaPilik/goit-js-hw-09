{"mappings":"YAyBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAnCSS,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACL,IAEuBC,EAAnBF,EAAMG,cADTC,SAAYhB,EAAKc,EAALd,MAAOiB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG1B,GAAoB,KAAhBlB,EAAMmB,OAA+B,KAAfF,EAAKE,OAA+B,KAAfD,EAAOC,MACrD,OAAOC,QAAQC,IAAI,kCAIrB,IADA,IAAIC,EAAcC,OAAOvB,EAAMmB,OACtBK,EAAI,EAAGA,GAAKN,EAAOC,MAAOK,GAAK,EAEtC1B,EAAc0B,EAAGF,GACdG,MAAK,SAAAC,G,OAAUN,QAAQC,IAAIK,E,IAC3BC,OAAM,SAAAC,G,OAASR,QAAQC,IAAIO,E,IAC5BN,GAAgBC,OAAON,EAAKE,OAGjCP,EAAMG,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nformRef.addEventListener(\"submit\", onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n   const {\n    elements: { delay, step, amount }\n   } = event.currentTarget;\n  \n   if (delay.value === \"\" || step.value === \"\" || amount.value===\"\") {\n    return console.log(\"Please fill in all the fields!\");\n  }\n\n  let delayPromise =Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n     \n    createPromise(i, delayPromise)\n      .then(result => console.log(result))\n      .catch(error => console.log(error));\n      delayPromise += Number(step.value);\n   \n}\n event.currentTarget.reset();\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","value","console","log","delayPromise","Number","i","then","result","catch","error","reset"],"version":3,"file":"03-promises.7381c116.js.map"}